// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using myProject.Models;

#nullable disable

namespace myProject.Migrations
{
    [DbContext(typeof(myyDbContext))]
    [Migration("20241222161158_hey333")]
    partial class hey333
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("myProject.Models.Berbersalonu", b =>
                {
                    b.Property<int>("salonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("salonID"));

                    b.Property<TimeOnly>("baslangicSaati")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("bitisSaati")
                        .HasColumnType("time");

                    b.Property<string>("salonAd")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("salonAdres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("salonEposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("salonNumara")
                        .HasColumnType("int");

                    b.HasKey("salonID");

                    b.ToTable("BerberSalonları");
                });

            modelBuilder.Entity("myProject.Models.Hizmetler", b =>
                {
                    b.Property<int>("hizmetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("hizmetID"));

                    b.Property<int?>("BerbersalonusalonID")
                        .HasColumnType("int");

                    b.Property<int>("PersonelID")
                        .HasColumnType("int");

                    b.Property<string>("hizmetAdi")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("hizmetFiyat")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("hizmetSuresi")
                        .HasColumnType("time");

                    b.HasKey("hizmetID");

                    b.HasIndex("BerbersalonusalonID");

                    b.HasIndex("PersonelID");

                    b.ToTable("Hizmetler");
                });

            modelBuilder.Entity("myProject.Models.Kullanıcı", b =>
                {
                    b.Property<int>("kullaniciID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kullaniciID"));

                    b.Property<string>("eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("kullaniciAdi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("kullaniciSifre")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("kullaniciID");

                    b.ToTable("Kullanıcı");
                });

            modelBuilder.Entity("myProject.Models.Personeller", b =>
                {
                    b.Property<int>("personelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("personelID"));

                    b.Property<int?>("BerbersalonusalonID")
                        .HasColumnType("int");

                    b.Property<string>("eposta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("isim")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("soyisim")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("telNo")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("personelID");

                    b.HasIndex("BerbersalonusalonID");

                    b.ToTable("Personeller");
                });

            modelBuilder.Entity("myProject.Models.Randevu", b =>
                {
                    b.Property<int>("randevuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("randevuID"));

                    b.Property<int>("hizmetID")
                        .HasColumnType("int");

                    b.Property<int>("kullanıcıkullaniciID")
                        .HasColumnType("int");

                    b.Property<int>("musteriId")
                        .HasColumnType("int");

                    b.Property<int>("personelID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("randevuSaati")
                        .HasColumnType("time");

                    b.Property<DateTime>("randevuTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("randevuID");

                    b.HasIndex("hizmetID");

                    b.HasIndex("kullanıcıkullaniciID");

                    b.HasIndex("personelID");

                    b.ToTable("Randevular");
                });

            modelBuilder.Entity("myProject.Models.UygunOlmayanTarihSaat", b =>
                {
                    b.Property<int>("tarihSaatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tarihSaatId"));

                    b.Property<int?>("PersonellerpersonelID")
                        .HasColumnType("int");

                    b.Property<int>("personelID")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("randevuSaati")
                        .HasColumnType("time");

                    b.Property<DateTime>("randevuTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("tarihSaatId");

                    b.HasIndex("PersonellerpersonelID");

                    b.ToTable("UygunOlmayanTarihSaat");
                });

            modelBuilder.Entity("myProject.Models.Hizmetler", b =>
                {
                    b.HasOne("myProject.Models.Berbersalonu", null)
                        .WithMany("Hizmetler")
                        .HasForeignKey("BerbersalonusalonID");

                    b.HasOne("myProject.Models.Personeller", "personel")
                        .WithMany("Hizmetler")
                        .HasForeignKey("PersonelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("personel");
                });

            modelBuilder.Entity("myProject.Models.Personeller", b =>
                {
                    b.HasOne("myProject.Models.Berbersalonu", null)
                        .WithMany("Personeller")
                        .HasForeignKey("BerbersalonusalonID");
                });

            modelBuilder.Entity("myProject.Models.Randevu", b =>
                {
                    b.HasOne("myProject.Models.Hizmetler", "hizmet")
                        .WithMany()
                        .HasForeignKey("hizmetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myProject.Models.Kullanıcı", "kullanıcı")
                        .WithMany("Randevular")
                        .HasForeignKey("kullanıcıkullaniciID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("myProject.Models.Personeller", "personel")
                        .WithMany("Randevular")
                        .HasForeignKey("personelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hizmet");

                    b.Navigation("kullanıcı");

                    b.Navigation("personel");
                });

            modelBuilder.Entity("myProject.Models.UygunOlmayanTarihSaat", b =>
                {
                    b.HasOne("myProject.Models.Personeller", null)
                        .WithMany("UygunOlmayanTarihSaatler")
                        .HasForeignKey("PersonellerpersonelID");
                });

            modelBuilder.Entity("myProject.Models.Berbersalonu", b =>
                {
                    b.Navigation("Hizmetler");

                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("myProject.Models.Kullanıcı", b =>
                {
                    b.Navigation("Randevular");
                });

            modelBuilder.Entity("myProject.Models.Personeller", b =>
                {
                    b.Navigation("Hizmetler");

                    b.Navigation("Randevular");

                    b.Navigation("UygunOlmayanTarihSaatler");
                });
#pragma warning restore 612, 618
        }
    }
}
